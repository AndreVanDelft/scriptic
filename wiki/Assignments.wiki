#summary Some assignments to get used to Scriptic

= Hello World =

Copy the following code into a file HelloWorld.java, in the Examples folder:
{{{
package Examples;

public class HelloWorld {
    public static scripts

    header(String s) = {System.out.println("\n"+s)}
    
    show(String s) 
    = int i:
      for(i=0; i<s.length(); i++)
    ; {System.out.print(s.charAt(i))}
    
    hello          = show("Hello ")
    world          = show("World!")

    test1          = hello ; world
    test2          = hello ; world
    test3          = hello ; world
    
    test0 = {System.out.println("Hello World!")}
    
    main (String args[]) = header("1:"); test1; 
                           header("2:"); test2; 
                           header("3:"); test3
}
}}}

Compile and execute it.
 * Change the semicolons in test2 and test3 into + and &. Try again.
 * Change the semicolon in show into + and thereafter &. 
 * Something will go wrong. Try to repair by declaring the loop variable private in the loop, using {{{private i:}

= Bag =

Install the GUI painter from http://www.cloudgarden.com/jigloo/: 
{{{
You should use the Update Manager in Eclipse to download and install Jigloo - just open it (under "Help->Software Updates->Find and Install"). You will need to create a new remote site entry in the update manager for the Jigloo update-site - the url is: http://cloudgarden1.com/update-site
}}}

Create a file Examples/BasicBagFrame.java with contents like:
{{{

package Examples;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JSlider;
import javax.swing.JToolBar;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;


/**
* This code was edited or generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED FOR
* THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED
* LEGALLY FOR ANY CORPORATE OR COMMERCIAL PURPOSE.
*/
public class BasicBagFrame extends javax.swing.JFrame {
	public JToolBar toolBar;
	public JButton bPlusButton;
	public JButton bMinusButton;
	public JLabel b_Label;
	public JButton aPlusButton;
	public JLabel a_Label;
	public JButton aMinusButton;

	/**
	* Auto-generated main method to display this JFrame
	*/
	public static void main(String[] args) {
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				BasicBagFrame inst = new BasicBagFrame();
				inst.setLocationRelativeTo(null);
				inst.setVisible(true);
			}
		});
	}
	
	public BasicBagFrame() {
		super();
		initGUI();
	}
	
	private void initGUI() {
		try {
			BorderLayout thisLayout = new BorderLayout();
			getContentPane().setLayout(thisLayout);
			setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
			this.setMinimumSize(new java.awt.Dimension(551, 367));
			   {
				toolBar = new JToolBar();
				getContentPane().add(toolBar, BorderLayout.NORTH);
				FlowLayout jToolBar1Layout = new FlowLayout();
				toolBar.setLayout(jToolBar1Layout);
				toolBar.setPreferredSize(new java.awt.Dimension(392, 40));
				{
					aPlusButton = new JButton();
					toolBar.add(aPlusButton);
					aPlusButton.setText("A+");
					aPlusButton.setEnabled(false);
					aPlusButton.setFocusable(false);
				}
				{
					a_Label = new JLabel();
					toolBar.add(a_Label);
					a_Label.setMinimumSize(new Dimension(70,14));
					a_Label.setPreferredSize(new java.awt.Dimension(35, 14));
				}
				{
					aMinusButton = new JButton();
					toolBar.add(aMinusButton);
					aMinusButton.setText("A-");
					aMinusButton.setEnabled(false);
					aMinusButton.setFocusable(false);
				}
				{
					bPlusButton = new JButton();
					toolBar.add(bPlusButton);
					bPlusButton.setText("B+");
					bPlusButton.setEnabled(false);
					bPlusButton.setFocusable(false);
				}
				{
					b_Label = new JLabel();
					toolBar.add(b_Label);
					b_Label.setMinimumSize(new Dimension(70,14));
					b_Label.setPreferredSize(new java.awt.Dimension(69, 14));
				}
				{
					bMinusButton = new JButton();
					toolBar.add(bMinusButton);
					bMinusButton.setText("B-");
					bMinusButton.setEnabled(false);
					bMinusButton.setFocusable(false);
				}
			}
			pack();
			this.setSize(551, 367);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
}}}